
#Область ОСНОВНЫЕ_МЕТОДЫ

&НаСервере
Функция ПолучитьСообщения(ChatId = Неопределено) Экспорт

	СоединениеHTTP = Новый HTTPСоединение("api.telegram.org",443,,,,,Новый ЗащищенноеСоединениеOpenSSL());
	Возврат СоединениеHTTP.Получить(Новый HTTPЗапрос("bot" + Строка(Константы.ТокенБота.Получить()) + "/getUpdates")).ПолучитьТелоКакСтроку();

КонецФункции

#КонецОбласти

&НаСервере
Процедура ОтправитьШуткуВЧат() Экспорт
	
	
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСообщенияНаСервере() Экспорт
	
	Сообщения = Телеграмм.ПолучитьСообщения();
	
	//читаем собщения
	ЧтениеJSON= Новый ЧтениеJSON();
	ЧтениеJSON.УстановитьСтроку(Сообщения);
	СтруктураСобщений = ПрочитатьJSON(ЧтениеJSON);
	
	ПоследнийАйдиСообщения = Константы.ПоследнийАйдиСообщения.Получить();
	
	Если СтруктураСобщений.ok Тогда
		ОтправитьСообщенияНаСервере(Константы.ИдентификаторГлавнойГруппы.Получить());
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОтправитьСообщенияНаСервере(ChatId)
	
	Массив = Новый Массив;
	Массив.Добавить("<b>Доброго времени суток!!!</b>" + Символы.ПС);
	Массив.Добавить("<b>Я - ВАНЕССА, а ты ХУЙ!</b>" + Символы.ПС);
	Массив.Добавить("<b>Я б ебала бы твою рыбу свой рыбой</b>" + Символы.ПС);
	Массив.Добавить("______________" + Символы.ПС);
	
	Массив.Добавить(ПолучитьОтчетНаСервере());
	Массив.Добавить(ПолучитьРасшифровкуОтчета());
	Массив.Добавить(ПолучитьДатуПоследнегоИзменения());
	ОдноСообщениее = ПолучитьСообщениеПолностью(Массив);
	
	Попытка
		//Отправляем сообщение с указанными AccessToken, ChatId и ТекстСообщения
		ОтправкаВТелеграм = Новый HTTPСоединение("api.telegram.org",443,,,,15,Новый ЗащищенноеСоединениеOpenSSL());
		ОтправкаВТелеграм.Получить(Новый HTTPЗапрос("bot" + Константы.ТокенБота.Получить() + "/sendMessage?chat_id=" + ChatId + "&text=" + ОдноСообщениее + "&parse_mode=HTML"));
	Исключение
		// Здесь может быть обработчик ошибки или вход в резервную функцию
		Сообщить(ОписаниеОшибки());
	КонецПопытки
	
КонецПроцедуры

&НаСервере
Функция ПолучитьОтчетНаСервере()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиПоДушниламОстатки.ФизЛицо.ФИОПолностью КАК ФизЛицо,
		|	ОстаткиПоДушниламОстатки.БаллОстаток КАК Балл
		|ИЗ
		|	РегистрНакопления.ОстаткиПоДушнилам.Остатки КАК ОстаткиПоДушниламОстатки";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Массив = Новый Массив;
	Массив.Добавить("<b>Текущий результат:</b>" + Символы.ПС);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ФизЛицо = ВыровнятьФизЛицо(ВыборкаДетальныеЗаписи.ФизЛицо, Константы.КоличествоСимволовВИмени.Получить());

		Строка = СтрШаблон("<code>%1 | (%2) %3</code>", ФизЛицо, ВыборкаДетальныеЗаписи.Балл, Символы.ПС);
		Массив.Добавить(Строка);
		
	КонецЦикла;
	
	Массив.Добавить(Символы.ПС + "______________" + Символы.ПС);
	СообщениеВЧат = СтрСоединить(Массив);
	
	Возврат СообщениеВЧат;

КонецФункции

&НаСервере
Функция ПолучитьРасшифровкуОтчета()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ОстаткиПоДушниламОстатки.ФизЛицо.ФИОПолностью КАК ФизЛицо,
		|	ПРЕДСТАВЛЕНИЕ(ОстаткиПоДушниламОстатки.Свойство) КАК Свойство,
		|	ОстаткиПоДушниламОстатки.БаллОстаток КАК Балл
		|ИЗ
		|	РегистрНакопления.ОстаткиПоДушнилам.Остатки КАК ОстаткиПоДушниламОстатки
		|ГДЕ
		|	ОстаткиПоДушниламОстатки.БаллОстаток < 0";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Массив = Новый Массив;
	Массив.Добавить(Символы.ПС + "<b>На дне:</b>" + Символы.ПС);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		ФизЛицо = ВыровнятьФизЛицо(ВыборкаДетальныеЗаписи.ФизЛицо, Константы.КоличествоСимволовВИмени.Получить());

		Строка = СтрШаблон("<code>%1 | %2 | %3%4</code>", ФизЛицо, ВыборкаДетальныеЗаписи.Свойство, ВыборкаДетальныеЗаписи.Балл, Символы.ПС);
		Массив.Добавить(Строка);
		
	КонецЦикла;
	
	Массив.Добавить(Символы.ПС + "______________" + Символы.ПС);
	СообщениеВЧат = СтрСоединить(Массив);
	
	Возврат СообщениеВЧат;


КонецФункции

&НаСервере
Функция ПолучитьДатуПоследнегоИзменения()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ОстаткиПоДушнилам.Период) КАК Дата
		|ИЗ
		|	РегистрНакопления.ОстаткиПоДушнилам КАК ОстаткиПоДушнилам";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Массив = Новый Массив;
	Массив.Добавить(Символы.ПС + "<b>Дата внесения изменений:</b>" + Символы.ПС);
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

		Строка = СтрШаблон("<code>%1</code>", ВыборкаДетальныеЗаписи.Дата);
		Массив.Добавить(Строка);
		
	КонецЦикла;
	
	Массив.Добавить(Символы.ПС + "______________" + Символы.ПС);
	СообщениеВЧат = СтрСоединить(Массив);
	
	Возврат СообщениеВЧат;


КонецФункции

&НаСервере
Функция ВыровнятьФизЛицо(Знач ФизЛицо, КоличествоСимволов)
	
	Пока СтрДлина(ФизЛицо) <= КоличествоСимволов Цикл
		ФизЛицо = ФизЛицо + Символы.НПП;
	КонецЦикла;
	
	Возврат ФизЛицо;
	
КонецФункции

&НаСервере
Функция ПолучитьСообщениеПолностью(МассивСообщений)
	
	Возврат СтрСоединить(МассивСообщений);
	
КонецФункции

&НаСервере
Процедура ОтправитьИзмененияНаСервере() Экспорт
	
	МассивСообщений = Новый Массив;
	
	ПоследняяДатаИменений = Константы.ДатаИмененей.Получить();
	ТекущаяДатаИменений = ПолучитьДатуИзменений();
	Если ПоследняяДатаИменений <> ТекущаяДатаИменений Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
			"ВЫБРАТЬ
			|	ПРЕДСТАВЛЕНИЕ(ОстаткиПоДушнилам.ФизЛицо.ФИОПолностью) КАК ФизЛицо,
			|	ПРЕДСТАВЛЕНИЕ(ОстаткиПоДушнилам.Свойство) КАК Свойство,
			|	ВЫБОР
			|		КОГДА ОстаткиПоДушнилам.ВидДвижения = &ВидДвиженияПриход
			|			ТОГДА ОстаткиПоДушнилам.Балл
			|		ИНАЧЕ -ОстаткиПоДушнилам.Балл
			|	КОНЕЦ КАК Балл,
			|	ОстаткиПоДушнилам.Комментарий КАК Комментарий
			|ИЗ
			|	РегистрНакопления.ОстаткиПоДушнилам КАК ОстаткиПоДушнилам
			|ГДЕ
			|	ОстаткиПоДушнилам.Период > &ПоследняяДатаИменений";
		
		Запрос.УстановитьПараметр("ПоследняяДатаИменений", ПоследняяДатаИменений);
		Запрос.УстановитьПараметр("ВидДвиженияПриход", ВидДвиженияНакопления.Приход);
		
		РезультатЗапроса = Запрос.Выполнить();
		
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		МассивСообщений.Добавить("<b>В базе данных произошли изменения</b>" + Символы.ПС);
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			МассивСообщений.Добавить(СтрШаблон("<code>%1 | %2 | %3 | Комментарий: %4%5</code>", 
												ВыборкаДетальныеЗаписи.ФизЛицо,
												ВыборкаДетальныеЗаписи.Свойство,
												ВыборкаДетальныеЗаписи.Балл,
												ВыборкаДетальныеЗаписи.Комментарий, 
												Символы.ПС));
		КонецЦикла;
	
	КонецЕсли;
	
	
	Если МассивСообщений.Количество() > 1 Тогда
		
		ОтправитьСообщение(Константы.ИдентификаторГлавнойГруппы.Получить(), СтрСоединить(МассивСообщений));
		ПолучитьСообщенияНаСервере();
		
	КонецЕсли;
	
	Константы.ДатаИмененей.Установить(ТекущаяДатаИменений);
	


КонецПроцедуры

&НаСервере
Функция ПолучитьДатуИзменений()

	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	МАКСИМУМ(ОстаткиПоДушнилам.Период) КАК ДатаИменений
		|ИЗ
		|	РегистрНакопления.ОстаткиПоДушнилам КАК ОстаткиПоДушнилам";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Если ВыборкаДетальныеЗаписи.Следующий() Тогда
		Возврат ВыборкаДетальныеЗаписи.ДатаИменений;
	КонецЕсли;

	Возврат Дата(1,1,1);
	
КонецФункции

&НаСервере
Процедура ОтправитьСообщение(ChatId, ТекстСообщения)
	
	Если НЕ ЗначениеЗаполнено(ChatId) ИЛИ НЕ ЗначениеЗаполнено(ТекстСообщения) Тогда
		Сообщить("Проверьте входящие данные в процедуру");
		Возврат;
	КонеЦЕсли;
	

	Попытка
		//Отправляем сообщение с указанными AccessToken, ChatId и ТекстСообщения
		ОтправкаВТелеграм = Новый HTTPСоединение("api.telegram.org",443,,,,15,Новый ЗащищенноеСоединениеOpenSSL());
		ОтправкаВТелеграм.Получить(Новый HTTPЗапрос("bot" + Константы.ТокенБота.Получить() + "/sendMessage?chat_id=" + ChatId + "&text=" + ТекстСообщения + "&parse_mode=HTML"));
	Исключение
		// Здесь может быть обработчик ошибки или вход в резервную функцию
		Сообщить(ОписаниеОшибки());
	КонецПопытки
	

КонецПроцедуры